# Smart Travel Planner AI - Terraform Variables Example
# Copy this file to terraform.tfvars and customize for your deployment

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# Project Information
project_name = "smart-travel-planner"
environment  = "dev"  # Options: dev, staging, prod

# AWS Configuration
aws_region = "us-east-1"  # Change to your preferred region

# Budget Configuration (IMPORTANT: Set this to avoid unexpected costs)
budget_limit_usd = "25"  # Monthly budget limit in USD
budget_alert_email = "your-email@example.com"  # Email for budget alerts

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Lambda Configuration
lambda_timeout     = 300    # Function timeout in seconds
lambda_memory_size = 1024   # Memory allocation in MB
lambda_runtime     = "python3.11"

# API Gateway Configuration
api_stage_name           = "v1"
api_throttle_rate_limit  = 100  # Requests per second
api_throttle_burst_limit = 200  # Burst capacity

# DynamoDB Configuration
dynamodb_billing_mode = "PAY_PER_REQUEST"  # or "PROVISIONED"
# Only used if billing_mode is "PROVISIONED":
# dynamodb_read_capacity  = 5
# dynamodb_write_capacity = 5

# S3 Configuration
s3_versioning_enabled    = true
s3_encryption_algorithm  = "AES256"

# Budget Configuration (Advanced)
budget_threshold_percentages = [80, 100]  # Alert at 80% and 100% of budget

# Monitoring Configuration
cloudwatch_log_retention_days = 14
enable_detailed_monitoring    = false  # Set to true for production

# Security Configuration
lambda_reserved_concurrency = -1  # -1 for unreserved, or set a number
api_gateway_minimum_compression_size = 1024

# Feature Flags
enable_api_caching = false  # Enable for production if needed
enable_xray_tracing = false  # Enable for debugging and monitoring
enable_waf = false  # Enable for production security

# Additional Tags (Optional)
additional_tags = {
  "Owner"       = "YourName"
  "Project"     = "SmartTravelPlannerAI"
  "Environment" = "Development"
  "CostCenter"  = "Engineering"
}

# =============================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# =============================================================================

# For Development Environment:
# environment = "dev"
# budget_limit_usd = "25"
# lambda_memory_size = 512
# enable_detailed_monitoring = false

# For Staging Environment:
# environment = "staging"
# budget_limit_usd = "50"
# lambda_memory_size = 1024
# enable_detailed_monitoring = true
# enable_xray_tracing = true

# For Production Environment:
# environment = "prod"
# budget_limit_usd = "200"
# lambda_memory_size = 1024
# lambda_reserved_concurrency = 50
# enable_detailed_monitoring = true
# enable_xray_tracing = true
# enable_api_caching = true
# enable_waf = true
# cloudwatch_log_retention_days = 30

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# If you want to use custom domain for API Gateway:
# api_custom_domain = "api.yourdomain.com"
# certificate_arn = "arn:aws:acm:us-east-1:123456789:certificate/abc123"

# If you want to deploy Lambda in VPC:
# lambda_vpc_config = {
#   subnet_ids         = ["subnet-abc123", "subnet-def456"]
#   security_group_ids = ["sg-abc123"]
# }

# If you want to customize DynamoDB:
# dynamodb_point_in_time_recovery = true
# dynamodb_backup_retention_period = 7

# If you want to customize S3:
# s3_lifecycle_rules = {
#   transition_to_ia_days = 30
#   transition_to_glacier_days = 90
#   expiration_days = 365
# }
